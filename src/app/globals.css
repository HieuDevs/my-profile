@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .parallax-3d {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  .card-3d {
    transform: translateZ(0);
    transition:
      transform 300ms ease,
      box-shadow 300ms ease,
      filter 300ms ease;
    will-change: transform;
  }

  .card-3d:hover {
    transform: translateY(-6px) rotateX(3deg) rotateY(-3deg) scale(1.02);
    filter: drop-shadow(0 10px 25px oklch(0.6 0 0 / 0.25));
  }

  .backdrop-glow {
    position: relative;
  }
  .backdrop-glow::before {
    content: "";
    position: absolute;
    inset: -20%;
    background:
      radial-gradient(60% 60% at 20% 20%, color-mix(in oklab, var(--chart-4) 30%, transparent) 0%, transparent 60%),
      radial-gradient(60% 60% at 80% 30%, color-mix(in oklab, var(--chart-2) 24%, transparent) 0%, transparent 60%),
      radial-gradient(60% 60% at 50% 80%, color-mix(in oklab, var(--chart-5) 24%, transparent) 0%, transparent 60%);
    filter: blur(60px) saturate(120%);
    opacity: 0.25;
    pointer-events: none;
    z-index: -1;
  }

  .bg-orb {
    background:
      radial-gradient(1000px 600px at 0% 0%, color-mix(in oklab, var(--chart-1) 22%, transparent) 0%, transparent 70%),
      radial-gradient(
        900px 700px at 100% 20%,
        color-mix(in oklab, var(--chart-3) 18%, transparent) 0%,
        transparent 70%
      ),
      radial-gradient(800px 800px at 50% 100%, color-mix(in oklab, var(--chart-5) 16%, transparent) 0%, transparent 70%);
  }

  .grid-fade {
    background-image:
      linear-gradient(to right, color-mix(in oklab, var(--ring) 18%, transparent) 1px, transparent 1px),
      linear-gradient(to bottom, color-mix(in oklab, var(--ring) 18%, transparent) 1px, transparent 1px);
    background-size: 40px 40px;
    mask-image: radial-gradient(60% 60% at 50% 40%, black 0%, black 40%, transparent 70%);
    opacity: 0.12;
  }

  /* 3D Card primitives for light/dark readability */
  .card3d {
    perspective: 1000px;
  }
  .card3d-inner {
    --rx: 0deg;
    --ry: 0deg;
    --px: 50%;
    --py: 50%;
    position: relative;
    transform: rotateX(var(--rx)) rotateY(var(--ry));
    transition:
      transform 250ms ease,
      box-shadow 250ms ease,
      filter 250ms ease;
    border-radius: theme(--radius-lg);
    background:
      radial-gradient(
        200px 200px at var(--px) var(--py),
        color-mix(in oklab, var(--accent) 10%, transparent) 0%,
        transparent 60%
      ),
      color-mix(in oklab, var(--card) 92%, transparent);
    box-shadow:
      0 1px 0 0 color-mix(in oklab, var(--border) 70%, transparent) inset,
      0 10px 30px -10px oklch(0 0 0 / 0.15);
    padding: 16px;
    border: 1px solid var(--border);
    backdrop-filter: saturate(120%);
  }
  .card3d:hover .card3d-inner {
    transform: rotateX(calc(var(--rx))) rotateY(calc(var(--ry))) translateY(-4px) scale(1.01);
    filter: drop-shadow(0 12px 24px oklch(0 0 0 / 0.18));
  }

  /* Animated border scan effect */
  .border-scan {
    position: relative;
  }
  .border-scan::before {
    content: "";
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    padding: 1px; /* border thickness */
    background: conic-gradient(
      from var(--scan-angle, 0deg),
      color-mix(in oklab, var(--ring) 85%, transparent) 0 8%,
      transparent 8% 100%
    );
    -webkit-mask:
      linear-gradient(#000 0 0) content-box,
      linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 200ms linear;
    animation: scan-rotate 2.5s linear infinite;
    pointer-events: none;
  }
  .border-scan:hover::before {
    opacity: 1;
  }

  @keyframes scan-rotate {
    to {
      --scan-angle: 360deg;
    }
  }
}
